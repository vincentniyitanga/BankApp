/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package edu.weber.cs3230.projects.finalproject;

import java.awt.Color;
import java.math.BigDecimal;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;

/**
 *
 * @author zycmm
 */
public class AddCustomerDialog extends javax.swing.JDialog {

    /**
     * Creates new form AddCustomerDialog
     */
    public AddCustomerDialog(java.awt.Frame parent, boolean modal, List<Customer> customers) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        this.customers = customers;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        phoneNumberLabel = new javax.swing.JLabel();
        phoneNumberTextField = new javax.swing.JTextField();
        initBalanceLabel = new javax.swing.JLabel();
        initBalanceTextField = new javax.swing.JTextField();
        accountTypeLabel = new javax.swing.JLabel();
        accountTypeComboBox = new javax.swing.JComboBox<>();
        addCustomerOKButton = new javax.swing.JButton();
        addCustomerCancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Customer Dialog");
        getContentPane().setLayout(new java.awt.GridLayout(6, 2, 5, 5));

        firstNameLabel.setText("First Name:");
        getContentPane().add(firstNameLabel);

        firstNameTextField.setText("John");
        firstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(firstNameTextField);

        lastNameLabel.setText("Last Name:");
        getContentPane().add(lastNameLabel);

        lastNameTextField.setText("Doe");
        getContentPane().add(lastNameTextField);

        phoneNumberLabel.setText("Phone Number:");
        getContentPane().add(phoneNumberLabel);

        phoneNumberTextField.setText("8015551234");
        getContentPane().add(phoneNumberTextField);

        initBalanceLabel.setText("Initial Balance");
        getContentPane().add(initBalanceLabel);

        initBalanceTextField.setText("1000");
        getContentPane().add(initBalanceTextField);

        accountTypeLabel.setText("Account Type");
        getContentPane().add(accountTypeLabel);

        accountTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Checking", "Savings", "Investment" }));
        getContentPane().add(accountTypeComboBox);

        addCustomerOKButton.setText("OK");
        addCustomerOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerOKButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addCustomerOKButton);

        addCustomerCancelButton.setText("Cancel");
        addCustomerCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerCancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addCustomerCancelButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void firstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextFieldActionPerformed

    private void addCustomerCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerCancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_addCustomerCancelButtonActionPerformed

    private void addCustomerOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerOKButtonActionPerformed
        String firstName = "";
        String lastName = "";
        String phoneNumber = "";
        BigDecimal balance = BigDecimal.ZERO;
        StringBuilder warnings = new StringBuilder();

        // verify first name field
        if(firstNameTextField.getText().isEmpty())
        {
            warnings.append("First name must not be empty.\n");
        }
        else
        {
            firstName = firstNameTextField.getText();
        }

        // last name field, phone number
        if(lastNameTextField.getText().isEmpty())
        {
            warnings.append("Last name must not be empty.\n");
        }
        else
        {
            lastName = lastNameTextField.getText();
        }
        
        // phone number
        if(!phoneNumberTextField.getText().matches("\\d{10}"))
        {
            warnings.append("Phone number must be 10 digits without dashes.\n");
        }
        else
        {
            phoneNumber = phoneNumberTextField.getText().replace("-", "");
            
        }
        
        // initial balance
        if(!initBalanceTextField.getText().isEmpty())
        {
            try{
                balance = new BigDecimal(initBalanceTextField.getText());
            }
            catch(NumberFormatException e)
            {
                warnings.append("Initial balance must be a number.");
            }
        }
        
        if (warnings.length() > 0) {
            JOptionPane.showMessageDialog(this, warnings.toString(), "Input Warnings", JOptionPane.WARNING_MESSAGE);
        } 
        else 
        {
            Customer customer = new Customer(firstName, lastName, "", phoneNumber);
            String accountType = accountTypeComboBox.getSelectedItem().toString();
            BankAccount account = null;
            switch(accountType)
            {
                case "Checking":
                    account = new CheckingAccount();
                    break;
                case "Savings":
                    account = new SavingsAccount();
                    break;
                case "Investment":
                    account = new InvestmentAccount();
                    break;
            }
            if(account != null)
            {
                account.setBalance(balance);
                customer.getBankAccounts().add(account);
            }
            customers.add(customer);
            newlyAddedCustomer = customer;
            this.dispose();            
        }
        
    }//GEN-LAST:event_addCustomerOKButtonActionPerformed

    public Customer getNewlyAddedCustomer()
    {
        return newlyAddedCustomer;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> accountTypeComboBox;
    private javax.swing.JLabel accountTypeLabel;
    private javax.swing.JButton addCustomerCancelButton;
    private javax.swing.JButton addCustomerOKButton;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel initBalanceLabel;
    private javax.swing.JTextField initBalanceTextField;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel phoneNumberLabel;
    private javax.swing.JTextField phoneNumberTextField;
    // End of variables declaration//GEN-END:variables
    
    // customized variable
    private List<Customer> customers;
    private Customer newlyAddedCustomer = null;

}
